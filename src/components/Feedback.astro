---
import { getLangFromUrl, useTranslations } from "../i18n/utils";
interface Props {
	name: string;
	state: string;
	body: string;
	batch: string;
}

const t = useTranslations(getLangFromUrl(Astro.url));
const { name, state, body, batch } = Astro.props;
// @ts-expect-error
const displayName = t(`feedback_${name}_name`);
---

<div class="card">
	<img src={`/achievers/${name}.jpg`} alt={displayName} />
	<div class="info">
		<h3>
			{displayName}
			<!-- <br />
			{state}<br />
			{batch} -->
		</h3>

		<span class="block">{state}</span>
		<span>{batch}</span>
	</div>
	<p>
		{body}
	</p>
</div>
<style>
	.card {
		--width: min(28rem, 90vw);
		--height: 20rem;

		@apply flex transition-all flex-col px-3 py-6 opacity-90 rounded-lg cursor-pointer snap-center relative bg-gray-700 text-white items-center overflow-hidden;
		min-width: var(--width);
		height: var(--height);
	}
	.card:hover {
		@apply bg-fairy-tale-500 opacity-100;
	}
	img,
	.info,
	p {
		@apply transition-transform;
		transform-origin: center;
		transition-duration: 350ms;
	}
	img {
		@apply aspect-square rounded-full w-24 justify-self-center mb-4;
		transform: translateY(calc(0.05 * var(--width)));
	}
	.card:hover img {
		transform: translateX(calc(-0.33 * var(--width))) scale(0.8);
	}
	h3 {
		@apply m-0 text-center text-2xl h-fit;
	}
	.info {
		@apply text-center;
		transform: translateY(calc(0.05 * var(--width)));
	}
	.card:hover .info {
		transform: translateX(calc(0.1 * var(--width)))
			translateY(calc(-0.34 * var(--height)));
	}
	p {
		@apply content-center text-lg p-0 m-0 text-white lg:text-lg h-0;
		transform: translateY(200px);
	}
	.card:hover p {
		transform: translateY(calc(-0.25 * var(--height)));
		@apply h-full;
	}
</style>
